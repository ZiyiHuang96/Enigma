<?php
/**
 * Created by PhpStorm.
 * User: huangziyi
 * Date: 2018/6/19
 * Time: 上午12:45
 */

namespace Enigma;


class ReceiverView extends View
{
    private $site;
    public function __construct(System $system, Site $site, $get, $post)
    {
        parent::__construct($system, View::RECEIVE);
        $this->site = $site;
    }

    public function presentHeader()
    {
        return parent::presentHeader(); // TODO: Change the autogenerated stub
    }

    public function presentBody()
    {
        $html=<<<HTML
<div class="body receiver">
    <form method="post" action="post/receiver.php">
        <div class="dialog">
HTML;
        $html .= $this->rotor(1);
        $html .= $this->rotor(2);
        $html .= $this->rotor(3);

        $html.=<<<HTML
            <p><input type="submit" name="set" value="Set">
                <input type="submit" name="cancel" value="Cancel">
            </p>
HTML;
        if(isset($_GET['e'])){
            $html.=$this->presentMessage();
        }
        $html.=<<<HTML
        </div>
HTML;

        $m_id = '';
        if($this->getSystem()->getDisplay()!=null){
            $decoded = $this->getSystem()->get_receive_left();
            $m = $this->getSystem()->getDisplay();
            $m_id = $m->getId();
            $code = $m->getCode();
            $content = $m->getContent();
            //$this->decode($content);
            //$cc = $this->getSystem()->get_receive_left();
            $html.=<<<HTML
<div class="dialog decode">
            <p class="code">Code: $code</p>
            <div class="encoder">
                <textarea name="dec" disabled>$decoded</textarea>
                <textarea name="enc" disabled>$content</textarea>
            </div>
        </div>
HTML;
        }



        $html.=<<<HTML
        
        <div class="dialog messages">
            <table>
                <tr>
                    <th>Select</th>
                    <th>Time</th>
                    <th>Sender</th>
                </tr>
HTML;
        $recipient = $this->getSystem()->getUser();
        $id = $recipient->getId();
        $messages = new Messages($this->site);
        $message_list = $messages->receiveMessage($id);
        foreach ($message_list as $message){
            $id = $message->getId();
            $date = $message->getDate();
            $date = date("M d, Y h:ia",strtotime($date));
            $sender = $message->getSender();
            $users = new Users($this->site);
            $name = $users->get($sender)->getName();
            if($m_id==$id){
                $html.=<<<HTML
<tr>
<td><input value="$id" type="radio" name="message" checked=""></td>
<td>$date</td>
<td>$name</td>
</tr>
HTML;

            }
            else{
                $html.=<<<HTML
<tr>
<td><input value="$id" type="radio" name="message"></td>
<td>$date</td>
<td>$name</td>
</tr>
HTML;
            }
        }
        $html.=<<<HTML

            </table>
            <p><input type="submit" value="View"></p>
        </div>
    </form>
</div>
HTML;
        return $html;
    }

    private function rotor($rotor) {
        $system = $this->getSystem();
        $enigma = $system->getEnigma();

        $setting = $enigma->getRotorSetting($rotor);
        $wheel = $enigma->getRotor($rotor);

        $html = <<<HTML
<p><label for="rotor-$rotor">Rotor $rotor:</label>
<select id="rotor-$rotor" name="rotor-$rotor">
HTML;

        $rotors = ['', 'I', 'II', 'III', 'IV', 'V'];
        for($i=1; $i<=5; $i++) {
            $id = $rotors[$i];
            $selected = $wheel == $i ? " selected" : "";
            $html .= <<<HTML
<option value="$i" $selected >$id</option>
HTML;

        }
        $html .= <<<HTML
</select>&nbsp;&nbsp;
<label for="initial-$rotor">Setting:</label>
<input class="initial" id="initial-$rotor" name="initial-$rotor" type="text" value="$setting">
</p>
HTML;

        return $html;
    }
    private function decode($text) {
        $system = $this->getSystem();
        //   $system->reset();

        $system->set_decode($text);

        $decoded = '';

        for($i=0; $i<strlen($text); $i++) {
            $ch = strtoupper(substr($text, $i, 1));
            if(strcmp($ch, 'A') >= 0 && strcmp($ch , 'Z') <= 0) {
                $decoded .= $this->send($ch);
            }
        }

        //
        // Split into substrings of 5 characters
        //
        $encoded5 = '';
        for($i=0; $i<strlen($decoded); $i+=5) {
            if(strlen($encoded5) > 0) {
                $encoded5 .= ' ';
            }

            $encoded5 .= substr($decoded, $i, 5);
        }
        $this->getSystem()->get_decode();
    }
    private function send($str){
        $result = '';
        for($i=0; $i<strlen($str); $i++){
            $c = substr($str, $i, 1);
            $result.=$this->getSystem()->getEnigma()->pressed($c);
        }
        return $result;
    }
}