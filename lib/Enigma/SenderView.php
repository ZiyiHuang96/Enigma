<?php
/**
 * Created by PhpStorm.
 * User: huangziyi
 * Date: 2018/6/18
 * Time: 上午3:01
 */

namespace Enigma;


class SenderView extends View
{
    const EMPTYSEARCH = "Search strings must be at least 3 letters long";
    const EMPTYINPUT = "Code must be three alphabetic characters";
    public function __construct(System $system,$get) {
        parent::__construct($system, View::SEND);
        //$system->clear();
    }
    public function presentHeader()
    {
        return parent::presentHeader(); // TODO: Change the autogenerated stub
    }

    public function presentBody()
    {
        $html=<<<HTML
<div class="body sender">
    <form method="post" action="post/sender.php">
        <div class="dialog_receipients">
            <p><label for="search">Find Recipients: </label>
                <input type="search" name="search" id="search" placeholder="Search...">
                <input type="submit" value="Search" name="searcher"></p>
            <!--<p>Use search to find recipients for a message to send.</p>-->
HTML;
        ///////////$html .= $this->presentMessage();
        if(isset($_GET['e']) and $_GET['e']==self::EMPTYSEARCH){
            $error_1 = $_GET['e'];
            $html.="<p>$error_1</p>";
        }

        $recipients = $this->getSystem()->getRecipients();
        if(count($recipients)!=0){
            $html.="<table class='recipient'><tbody>";
            foreach ($recipients as $recipient){
                $id = $recipient->getId();
                $name = $recipient->getName();
                $html.=<<<HTML
<tr>
<td><button name="remove" value="$id">Remove</button></td>
<td>$name</td>
</tr>
HTML;
            }
            $html.="</tbody></table>";
        }
        else{
            $html.="<p>Use search to find recipients for a message to send.</p>";
        }

        $html.=<<<HTML
        </div>

        <div class="dialog">
HTML;
        $html .= $this->rotor(1);
        $html .= $this->rotor(2);
        $html .= $this->rotor(3);

        $html .= <<<HTML
<p><input type="submit" name="set" value="Set"> <input type="submit" name="cancel" value="Cancel"></p>
HTML;


        $html.=$this->presentMessage();

        $code = $this->getSystem()->get_code();
        $dec = $this->getSystem()->get_decode();
        $encode_m = $this->getSystem()->get_send_right();
        $enc = $this->getSystem()->get_encode();

        $encoded = $this->getSystem()->get_encode();
        $html.=<<<HTML
                
        </div>
        <div class="dialog encode">
            <p class="code"><label for="code">Code: </label>
                <input type="text" name="code" id="code" value="$code"></p>
            <div class="encoder">
                <textarea name="from">$dec</textarea>
                <textarea name="to" disabled>$encoded</textarea>
            </div>
HTML;
        if(isset($_GET['e']) and $_GET['e']==self::EMPTYINPUT){
            $error_3 = $_GET['e'];
            $html.="<p>$error_3</p>";
        }
        $html.=<<<HTML
            <p><input type="submit" name="encode" value="Encode ->">
                <input type="submit" name="send" value="Send"></p>
        </div>
    </form>
</div>
HTML;
        return $html;

    }
    private function rotor($rotor) {
        $system = $this->getSystem();
        $enigma = $system->getEnigma();

        $setting = $enigma->getRotorSetting($rotor);
        $wheel = $enigma->getRotor($rotor);

        $html = <<<HTML
<p><label for="rotor-$rotor">Rotor $rotor:</label>
<select id="rotor-$rotor" name="rotor-$rotor">
HTML;

        $rotors = ['', 'I', 'II', 'III', 'IV', 'V'];
        for($i=1; $i<=5; $i++) {
            $id = $rotors[$i];
            $selected = $wheel == $i ? " selected" : "";
            $html .= <<<HTML
<option value="$i"$selected>$id</option>
HTML;

        }
        $html .= <<<HTML
</select>&nbsp;&nbsp;
<label for="initial-$rotor">Setting:</label>
<input class="initial" id="initial-$rotor" name="initial-$rotor" type="text" value="$setting">
</p>
HTML;

        return $html;
    }
}